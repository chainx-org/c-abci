/*********************************************************************************************/
/*                   littleEndian.h Created by xuli on 2017/08/10                            */
/*              本文件用于以小端模式存储的二进制与整型数据之间互相转换                       */
/*********************************************************************************************/
#ifndef __LITTLEENDIAN_H__
#define __LITTLEENDIAN_H__

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

/************************************************************************************************
 * 判断本机器是否为小端存储方式
 * @return:是小端返回true，否则返回false
 ************************************************************************************************/
bool isLittleEndian();


/************************************************************************************************
 * 将以小端模式存储的二进制字符串转换成uint16_t类型
 * @buff:输入参数，待转换的二进制字符串
 * @value:输出参数，用于存储转换之后的整型数据
 * @return:成功返回true 失败返回false
 ************************************************************************************************/
bool littleEndianUint16(const uint8_t  *buff, uint16_t *value);



/************************************************************************************************
 * 将以小端模式存储uint16_t类型转换成二进制字符串
 * @buff:输出参数，用于存储转换之后的二进制字符串
 * @value:输入参数，待转换的整型数据
 * @return:成功返回true 失败返回false
 ************************************************************************************************/
bool littleEndianPutUint16(uint8_t *buff, uint16_t value);



/************************************************************************************************
 * 将以小端模式存储的二进制字符串转换成uint32_t类型
 * @buff:输入参数，待转换的二进制字符串
 * @value:输出参数，用于存储转换之后的整型数据
 * @return:成功返回true 失败返回false
 ************************************************************************************************/
bool littleEndianUint32(const uint8_t *buff, uint32_t *value);



/************************************************************************************************
 * 将以小端模式存储uint36_t类型转换成二进制字符串
 * @buff:输出参数，用于存储转换之后的二进制字符串
 * @value:输入参数，待转换的整型数据
 * @return:成功返回true 失败返回false
 ************************************************************************************************/
bool littleEndianPutUint32(uint8_t *buff, uint32_t value);



/************************************************************************************************
 * 将以小端模式存储的二进制字符串转换成uint64_t类型
 * @buff:输入参数，待转换的二进制字符串
 * @value:输出参数，用于存储转换之后的整型数据
 * @return:成功返回true 失败返回false
 ************************************************************************************************/
bool littleEndianUint64(const uint8_t *buff, uint64_t *value);



/************************************************************************************************
 * 将以小端模式存储uint64_t类型转换成二进制字符串
 * @buff:输出参数，用于存储转换之后的二进制字符串
 * @value:输入参数，待转换的整型数据
 * @return:成功返回true 失败返回false
 ************************************************************************************************/
bool littleEndianPutUint64(uint8_t *buff, uint64_t value);

#endif
