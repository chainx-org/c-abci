/*********************************************************************************************/
/*                    request_struct.h Created by xuli on 2017/08/10                         */
/*                        本文件实现请求结构体的内存分配以及释放                             */
/*********************************************************************************************/
#ifndef __REQUEST_STRUCT_H__
#define __REQUEST_STRUCT_H__

#include "types.pb-c.h"
#include <stdlib.h>

/**************************************************************************
 * 给请求Echo结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestEcho *request_malloc_echo();


/**************************************************************************
 * 给请求Flush结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestFlush *request_malloc_flush();


/**************************************************************************
 * 给请求Info结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestInfo *request_malloc_info();


/**************************************************************************
 * 给请求SetOption结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestSetOption *request_malloc_setoption();


/**************************************************************************
 * 给请求DeliverTx结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestDeliverTx *request_malloc_delivertx();


/**************************************************************************
 * 给请求CheckTx结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestCheckTx *request_malloc_checktx();


/**************************************************************************
 * 给请求Commit结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestCommit *request_malloc_commit();


/**************************************************************************
 * 给请求Query结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestQuery *request_malloc_query();


/**************************************************************************
 * 给请求InitChain结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestInitChain *request_malloc_initchain();


/**************************************************************************
 * 给请求BeginBlock结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestBeginBlock *request_malloc_beginblock();


/**************************************************************************
 * 给请求EndBlock结构体分配内存
 * @return:成功返回分配的内存的地址，失败返回NULL
**************************************************************************/
Types__RequestEndBlock *request_malloc_endblock();


/**************************************************************************
 * 释放请求Echo结构体内存
 * @echo:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_echo(Types__RequestEcho *echo);


/**************************************************************************
 * 释放请求Flush结构体内存
 * @flush:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_flush(Types__RequestFlush *flush);


/**************************************************************************
 * 释放请求Info结构体内存
 * @Info:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_info(Types__RequestInfo *info);


/**************************************************************************
 * 释放请求SetOption结构体内存
 * @setoption:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_setoption(Types__RequestSetOption *setoption);;


/**************************************************************************
 * 释放请求DeliverTx结构体内存
 * @delivertx:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_delivertx(Types__RequestDeliverTx *delivertx);


/**************************************************************************
 * 释放请求CheckTx结构体内存
 * @checktx:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_checktx(Types__RequestCheckTx *checktx);


/**************************************************************************
 * 释放请求Commit结构体内存
 * @commit:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_commit(Types__RequestCommit *commit);


/**************************************************************************
 * 释放请求Query结构体内存
 * @query:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_query(Types__RequestQuery *query);


/**************************************************************************
 * 释放请求InitChain结构体内存
 * @initchain:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_initchain(Types__RequestInitChain *initchain);


/**************************************************************************
 * 释放请求BeginBlock结构体内存
 * @beginblock:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_beginblock(Types__RequestBeginBlock *beginblock);


/**************************************************************************
 * 释放请求EndBlock结构体内存
 * @endblock:待释放的结构体
 * @return:返回空值
 **************************************************************************/
void request_free_endblock(Types__RequestEndBlock *endblock);

#endif
