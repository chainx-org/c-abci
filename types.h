/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: types.proto */

#ifndef PROTOBUF_C_types_2eproto__INCLUDED
#define PROTOBUF_C_types_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Types__Request Types__Request;
typedef struct _Types__RequestEcho Types__RequestEcho;
typedef struct _Types__RequestFlush Types__RequestFlush;
typedef struct _Types__RequestInfo Types__RequestInfo;
typedef struct _Types__RequestSetOption Types__RequestSetOption;
typedef struct _Types__RequestDeliverTx Types__RequestDeliverTx;
typedef struct _Types__RequestCheckTx Types__RequestCheckTx;
typedef struct _Types__RequestQuery Types__RequestQuery;
typedef struct _Types__RequestCommit Types__RequestCommit;
typedef struct _Types__RequestInitChain Types__RequestInitChain;
typedef struct _Types__RequestBeginBlock Types__RequestBeginBlock;
typedef struct _Types__RequestEndBlock Types__RequestEndBlock;
typedef struct _Types__Response Types__Response;
typedef struct _Types__ResponseException Types__ResponseException;
typedef struct _Types__ResponseEcho Types__ResponseEcho;
typedef struct _Types__ResponseFlush Types__ResponseFlush;
typedef struct _Types__ResponseInfo Types__ResponseInfo;
typedef struct _Types__ResponseSetOption Types__ResponseSetOption;
typedef struct _Types__ResponseDeliverTx Types__ResponseDeliverTx;
typedef struct _Types__ResponseCheckTx Types__ResponseCheckTx;
typedef struct _Types__ResponseQuery Types__ResponseQuery;
typedef struct _Types__ResponseCommit Types__ResponseCommit;
typedef struct _Types__ResponseInitChain Types__ResponseInitChain;
typedef struct _Types__ResponseBeginBlock Types__ResponseBeginBlock;
typedef struct _Types__ResponseEndBlock Types__ResponseEndBlock;
typedef struct _Types__Header Types__Header;
typedef struct _Types__BlockID Types__BlockID;
typedef struct _Types__PartSetHeader Types__PartSetHeader;
typedef struct _Types__Validator Types__Validator;


/* --- enums --- */

typedef enum _Types__CodeType {
  TYPES__CODE_TYPE__OK = 0,
  /*
   * General response codes, 0 ~ 99
   */
  TYPES__CODE_TYPE__InternalError = 1,
  TYPES__CODE_TYPE__EncodingError = 2,
  TYPES__CODE_TYPE__BadNonce = 3,
  TYPES__CODE_TYPE__Unauthorized = 4,
  TYPES__CODE_TYPE__InsufficientFunds = 5,
  TYPES__CODE_TYPE__UnknownRequest = 6,
  /*
   * Reserved for basecoin, 100 ~ 199
   */
  TYPES__CODE_TYPE__BaseDuplicateAddress = 101,
  TYPES__CODE_TYPE__BaseEncodingError = 102,
  TYPES__CODE_TYPE__BaseInsufficientFees = 103,
  TYPES__CODE_TYPE__BaseInsufficientFunds = 104,
  TYPES__CODE_TYPE__BaseInsufficientGasPrice = 105,
  TYPES__CODE_TYPE__BaseInvalidInput = 106,
  TYPES__CODE_TYPE__BaseInvalidOutput = 107,
  TYPES__CODE_TYPE__BaseInvalidPubKey = 108,
  TYPES__CODE_TYPE__BaseInvalidSequence = 109,
  TYPES__CODE_TYPE__BaseInvalidSignature = 110,
  TYPES__CODE_TYPE__BaseUnknownAddress = 111,
  TYPES__CODE_TYPE__BaseUnknownPubKey = 112,
  TYPES__CODE_TYPE__BaseUnknownPlugin = 113,
  /*
   * Reserved for governance, 200 ~ 299
   */
  TYPES__CODE_TYPE__GovUnknownEntity = 201,
  TYPES__CODE_TYPE__GovUnknownGroup = 202,
  TYPES__CODE_TYPE__GovUnknownProposal = 203,
  TYPES__CODE_TYPE__GovDuplicateGroup = 204,
  TYPES__CODE_TYPE__GovDuplicateMember = 205,
  TYPES__CODE_TYPE__GovDuplicateProposal = 206,
  TYPES__CODE_TYPE__GovDuplicateVote = 207,
  TYPES__CODE_TYPE__GovInvalidMember = 208,
  TYPES__CODE_TYPE__GovInvalidVote = 209,
  TYPES__CODE_TYPE__GovInvalidVotingPower = 210
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(TYPES__CODE_TYPE)
} Types__CodeType;

/* --- messages --- */

typedef enum {
  TYPES__REQUEST__VALUE__NOT_SET = 0,
  TYPES__REQUEST__VALUE_ECHO = 1,
  TYPES__REQUEST__VALUE_FLUSH = 2,
  TYPES__REQUEST__VALUE_INFO = 3,
  TYPES__REQUEST__VALUE_SET_OPTION = 4,
  TYPES__REQUEST__VALUE_DELIVER_TX = 5,
  TYPES__REQUEST__VALUE_CHECK_TX = 6,
  TYPES__REQUEST__VALUE_COMMIT = 7,
  TYPES__REQUEST__VALUE_QUERY = 8,
  TYPES__REQUEST__VALUE_INIT_CHAIN = 9,
  TYPES__REQUEST__VALUE_BEGIN_BLOCK = 10,
  TYPES__REQUEST__VALUE_END_BLOCK = 11,
} Types__Request__ValueCase;

struct  _Types__Request
{
  ProtobufCMessage base;
  Types__Request__ValueCase value_case;
  union {
    Types__RequestEcho *echo;
    Types__RequestFlush *flush;
    Types__RequestInfo *info;
    Types__RequestSetOption *set_option;
    Types__RequestDeliverTx *deliver_tx;
    Types__RequestCheckTx *check_tx;
    Types__RequestCommit *commit;
    Types__RequestQuery *query;
    Types__RequestInitChain *init_chain;
    Types__RequestBeginBlock *begin_block;
    Types__RequestEndBlock *end_block;
  };
};
#define TYPES__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request__descriptor) \
    , TYPES__REQUEST__VALUE__NOT_SET, {0} }


struct  _Types__RequestEcho
{
  ProtobufCMessage base;
  char *message;
};
#define TYPES__REQUEST_ECHO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_echo__descriptor) \
    , NULL }


struct  _Types__RequestFlush
{
  ProtobufCMessage base;
};
#define TYPES__REQUEST_FLUSH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_flush__descriptor) \
     }


struct  _Types__RequestInfo
{
  ProtobufCMessage base;
};
#define TYPES__REQUEST_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_info__descriptor) \
     }


struct  _Types__RequestSetOption
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define TYPES__REQUEST_SET_OPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_set_option__descriptor) \
    , NULL, NULL }


struct  _Types__RequestDeliverTx
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tx;
  ProtobufCBinaryData tx;
};
#define TYPES__REQUEST_DELIVER_TX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_deliver_tx__descriptor) \
    , 0,{0,NULL} }


struct  _Types__RequestCheckTx
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tx;
  ProtobufCBinaryData tx;
};
#define TYPES__REQUEST_CHECK_TX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_check_tx__descriptor) \
    , 0,{0,NULL} }


struct  _Types__RequestQuery
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  char *path;
  protobuf_c_boolean has_height;
  uint64_t height;
  protobuf_c_boolean has_prove;
  protobuf_c_boolean prove;
};
#define TYPES__REQUEST_QUERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_query__descriptor) \
    , 0,{0,NULL}, NULL, 0,0, 0,0 }


struct  _Types__RequestCommit
{
  ProtobufCMessage base;
};
#define TYPES__REQUEST_COMMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_commit__descriptor) \
     }


struct  _Types__RequestInitChain
{
  ProtobufCMessage base;
  size_t n_validators;
  Types__Validator **validators;
};
#define TYPES__REQUEST_INIT_CHAIN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_init_chain__descriptor) \
    , 0,NULL }


struct  _Types__RequestBeginBlock
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hash;
  ProtobufCBinaryData hash;
  Types__Header *header;
};
#define TYPES__REQUEST_BEGIN_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_begin_block__descriptor) \
    , 0,{0,NULL}, NULL }


struct  _Types__RequestEndBlock
{
  ProtobufCMessage base;
  protobuf_c_boolean has_height;
  uint64_t height;
};
#define TYPES__REQUEST_END_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__request_end_block__descriptor) \
    , 0,0 }


typedef enum {
  TYPES__RESPONSE__VALUE__NOT_SET = 0,
  TYPES__RESPONSE__VALUE_EXCEPTION = 1,
  TYPES__RESPONSE__VALUE_ECHO = 2,
  TYPES__RESPONSE__VALUE_FLUSH = 3,
  TYPES__RESPONSE__VALUE_INFO = 4,
  TYPES__RESPONSE__VALUE_SET_OPTION = 5,
  TYPES__RESPONSE__VALUE_DELIVER_TX = 6,
  TYPES__RESPONSE__VALUE_CHECK_TX = 7,
  TYPES__RESPONSE__VALUE_COMMIT = 8,
  TYPES__RESPONSE__VALUE_QUERY = 9,
  TYPES__RESPONSE__VALUE_INIT_CHAIN = 10,
  TYPES__RESPONSE__VALUE_BEGIN_BLOCK = 11,
  TYPES__RESPONSE__VALUE_END_BLOCK = 12,
} Types__Response__ValueCase;

struct  _Types__Response
{
  ProtobufCMessage base;
  Types__Response__ValueCase value_case;
  union {
    Types__ResponseException *exception;
    Types__ResponseEcho *echo;
    Types__ResponseFlush *flush;
    Types__ResponseInfo *info;
    Types__ResponseSetOption *set_option;
    Types__ResponseDeliverTx *deliver_tx;
    Types__ResponseCheckTx *check_tx;
    Types__ResponseCommit *commit;
    Types__ResponseQuery *query;
    Types__ResponseInitChain *init_chain;
    Types__ResponseBeginBlock *begin_block;
    Types__ResponseEndBlock *end_block;
  };
};
#define TYPES__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response__descriptor) \
    , TYPES__RESPONSE__VALUE__NOT_SET, {0} }


struct  _Types__ResponseException
{
  ProtobufCMessage base;
  char *error;
};
#define TYPES__RESPONSE_EXCEPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_exception__descriptor) \
    , NULL }


struct  _Types__ResponseEcho
{
  ProtobufCMessage base;
  char *message;
};
#define TYPES__RESPONSE_ECHO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_echo__descriptor) \
    , NULL }


struct  _Types__ResponseFlush
{
  ProtobufCMessage base;
};
#define TYPES__RESPONSE_FLUSH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_flush__descriptor) \
     }


struct  _Types__ResponseInfo
{
  ProtobufCMessage base;
  char *data;
  char *version;
  protobuf_c_boolean has_last_block_height;
  uint64_t last_block_height;
  protobuf_c_boolean has_last_block_app_hash;
  ProtobufCBinaryData last_block_app_hash;
};
#define TYPES__RESPONSE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_info__descriptor) \
    , NULL, NULL, 0,0, 0,{0,NULL} }


struct  _Types__ResponseSetOption
{
  ProtobufCMessage base;
  char *log;
};
#define TYPES__RESPONSE_SET_OPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_set_option__descriptor) \
    , NULL }


struct  _Types__ResponseDeliverTx
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  Types__CodeType code;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  char *log;
};
#define TYPES__RESPONSE_DELIVER_TX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_deliver_tx__descriptor) \
    , 0,0, 0,{0,NULL}, NULL }


struct  _Types__ResponseCheckTx
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  Types__CodeType code;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  char *log;
};
#define TYPES__RESPONSE_CHECK_TX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_check_tx__descriptor) \
    , 0,0, 0,{0,NULL}, NULL }


struct  _Types__ResponseQuery
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  Types__CodeType code;
  protobuf_c_boolean has_index;
  int64_t index;
  protobuf_c_boolean has_key;
  ProtobufCBinaryData key;
  protobuf_c_boolean has_value;
  ProtobufCBinaryData value;
  protobuf_c_boolean has_proof;
  ProtobufCBinaryData proof;
  protobuf_c_boolean has_height;
  uint64_t height;
  char *log;
};
#define TYPES__RESPONSE_QUERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_query__descriptor) \
    , 0,0, 0,0, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,0, NULL }


struct  _Types__ResponseCommit
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  Types__CodeType code;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  char *log;
};
#define TYPES__RESPONSE_COMMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_commit__descriptor) \
    , 0,0, 0,{0,NULL}, NULL }


struct  _Types__ResponseInitChain
{
  ProtobufCMessage base;
};
#define TYPES__RESPONSE_INIT_CHAIN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_init_chain__descriptor) \
     }


struct  _Types__ResponseBeginBlock
{
  ProtobufCMessage base;
};
#define TYPES__RESPONSE_BEGIN_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_begin_block__descriptor) \
     }


struct  _Types__ResponseEndBlock
{
  ProtobufCMessage base;
  size_t n_diffs;
  Types__Validator **diffs;
};
#define TYPES__RESPONSE_END_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__response_end_block__descriptor) \
    , 0,NULL }


struct  _Types__Header
{
  ProtobufCMessage base;
  char *chain_id;
  protobuf_c_boolean has_height;
  uint64_t height;
  protobuf_c_boolean has_time;
  uint64_t time;
  protobuf_c_boolean has_num_txs;
  uint64_t num_txs;
  Types__BlockID *last_block_id;
  protobuf_c_boolean has_last_commit_hash;
  ProtobufCBinaryData last_commit_hash;
  protobuf_c_boolean has_data_hash;
  ProtobufCBinaryData data_hash;
  protobuf_c_boolean has_validators_hash;
  ProtobufCBinaryData validators_hash;
  protobuf_c_boolean has_app_hash;
  ProtobufCBinaryData app_hash;
};
#define TYPES__HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__header__descriptor) \
    , NULL, 0,0, 0,0, 0,0, NULL, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL} }


struct  _Types__BlockID
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hash;
  ProtobufCBinaryData hash;
  Types__PartSetHeader *parts;
};
#define TYPES__BLOCK_ID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__block_id__descriptor) \
    , 0,{0,NULL}, NULL }


struct  _Types__PartSetHeader
{
  ProtobufCMessage base;
  protobuf_c_boolean has_total;
  uint64_t total;
  protobuf_c_boolean has_hash;
  ProtobufCBinaryData hash;
};
#define TYPES__PART_SET_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__part_set_header__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _Types__Validator
{
  ProtobufCMessage base;
  protobuf_c_boolean has_pubkey;
  ProtobufCBinaryData pubkey;
  protobuf_c_boolean has_power;
  uint64_t power;
};
#define TYPES__VALIDATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__validator__descriptor) \
    , 0,{0,NULL}, 0,0 }


/* Types__Request methods */
void   types__request__init
                     (Types__Request         *message);
size_t types__request__get_packed_size
                     (const Types__Request   *message);
size_t types__request__pack
                     (const Types__Request   *message,
                      uint8_t             *out);
size_t types__request__pack_to_buffer
                     (const Types__Request   *message,
                      ProtobufCBuffer     *buffer);
Types__Request *
       types__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request__free_unpacked
                     (Types__Request *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestEcho methods */
void   types__request_echo__init
                     (Types__RequestEcho         *message);
size_t types__request_echo__get_packed_size
                     (const Types__RequestEcho   *message);
size_t types__request_echo__pack
                     (const Types__RequestEcho   *message,
                      uint8_t             *out);
size_t types__request_echo__pack_to_buffer
                     (const Types__RequestEcho   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestEcho *
       types__request_echo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_echo__free_unpacked
                     (Types__RequestEcho *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestFlush methods */
void   types__request_flush__init
                     (Types__RequestFlush         *message);
size_t types__request_flush__get_packed_size
                     (const Types__RequestFlush   *message);
size_t types__request_flush__pack
                     (const Types__RequestFlush   *message,
                      uint8_t             *out);
size_t types__request_flush__pack_to_buffer
                     (const Types__RequestFlush   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestFlush *
       types__request_flush__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_flush__free_unpacked
                     (Types__RequestFlush *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestInfo methods */
void   types__request_info__init
                     (Types__RequestInfo         *message);
size_t types__request_info__get_packed_size
                     (const Types__RequestInfo   *message);
size_t types__request_info__pack
                     (const Types__RequestInfo   *message,
                      uint8_t             *out);
size_t types__request_info__pack_to_buffer
                     (const Types__RequestInfo   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestInfo *
       types__request_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_info__free_unpacked
                     (Types__RequestInfo *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestSetOption methods */
void   types__request_set_option__init
                     (Types__RequestSetOption         *message);
size_t types__request_set_option__get_packed_size
                     (const Types__RequestSetOption   *message);
size_t types__request_set_option__pack
                     (const Types__RequestSetOption   *message,
                      uint8_t             *out);
size_t types__request_set_option__pack_to_buffer
                     (const Types__RequestSetOption   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestSetOption *
       types__request_set_option__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_set_option__free_unpacked
                     (Types__RequestSetOption *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestDeliverTx methods */
void   types__request_deliver_tx__init
                     (Types__RequestDeliverTx         *message);
size_t types__request_deliver_tx__get_packed_size
                     (const Types__RequestDeliverTx   *message);
size_t types__request_deliver_tx__pack
                     (const Types__RequestDeliverTx   *message,
                      uint8_t             *out);
size_t types__request_deliver_tx__pack_to_buffer
                     (const Types__RequestDeliverTx   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestDeliverTx *
       types__request_deliver_tx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_deliver_tx__free_unpacked
                     (Types__RequestDeliverTx *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestCheckTx methods */
void   types__request_check_tx__init
                     (Types__RequestCheckTx         *message);
size_t types__request_check_tx__get_packed_size
                     (const Types__RequestCheckTx   *message);
size_t types__request_check_tx__pack
                     (const Types__RequestCheckTx   *message,
                      uint8_t             *out);
size_t types__request_check_tx__pack_to_buffer
                     (const Types__RequestCheckTx   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestCheckTx *
       types__request_check_tx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_check_tx__free_unpacked
                     (Types__RequestCheckTx *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestQuery methods */
void   types__request_query__init
                     (Types__RequestQuery         *message);
size_t types__request_query__get_packed_size
                     (const Types__RequestQuery   *message);
size_t types__request_query__pack
                     (const Types__RequestQuery   *message,
                      uint8_t             *out);
size_t types__request_query__pack_to_buffer
                     (const Types__RequestQuery   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestQuery *
       types__request_query__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_query__free_unpacked
                     (Types__RequestQuery *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestCommit methods */
void   types__request_commit__init
                     (Types__RequestCommit         *message);
size_t types__request_commit__get_packed_size
                     (const Types__RequestCommit   *message);
size_t types__request_commit__pack
                     (const Types__RequestCommit   *message,
                      uint8_t             *out);
size_t types__request_commit__pack_to_buffer
                     (const Types__RequestCommit   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestCommit *
       types__request_commit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_commit__free_unpacked
                     (Types__RequestCommit *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestInitChain methods */
void   types__request_init_chain__init
                     (Types__RequestInitChain         *message);
size_t types__request_init_chain__get_packed_size
                     (const Types__RequestInitChain   *message);
size_t types__request_init_chain__pack
                     (const Types__RequestInitChain   *message,
                      uint8_t             *out);
size_t types__request_init_chain__pack_to_buffer
                     (const Types__RequestInitChain   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestInitChain *
       types__request_init_chain__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_init_chain__free_unpacked
                     (Types__RequestInitChain *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestBeginBlock methods */
void   types__request_begin_block__init
                     (Types__RequestBeginBlock         *message);
size_t types__request_begin_block__get_packed_size
                     (const Types__RequestBeginBlock   *message);
size_t types__request_begin_block__pack
                     (const Types__RequestBeginBlock   *message,
                      uint8_t             *out);
size_t types__request_begin_block__pack_to_buffer
                     (const Types__RequestBeginBlock   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestBeginBlock *
       types__request_begin_block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_begin_block__free_unpacked
                     (Types__RequestBeginBlock *message,
                      ProtobufCAllocator *allocator);
/* Types__RequestEndBlock methods */
void   types__request_end_block__init
                     (Types__RequestEndBlock         *message);
size_t types__request_end_block__get_packed_size
                     (const Types__RequestEndBlock   *message);
size_t types__request_end_block__pack
                     (const Types__RequestEndBlock   *message,
                      uint8_t             *out);
size_t types__request_end_block__pack_to_buffer
                     (const Types__RequestEndBlock   *message,
                      ProtobufCBuffer     *buffer);
Types__RequestEndBlock *
       types__request_end_block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__request_end_block__free_unpacked
                     (Types__RequestEndBlock *message,
                      ProtobufCAllocator *allocator);
/* Types__Response methods */
void   types__response__init
                     (Types__Response         *message);
size_t types__response__get_packed_size
                     (const Types__Response   *message);
size_t types__response__pack
                     (const Types__Response   *message,
                      uint8_t             *out);
size_t types__response__pack_to_buffer
                     (const Types__Response   *message,
                      ProtobufCBuffer     *buffer);
Types__Response *
       types__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response__free_unpacked
                     (Types__Response *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseException methods */
void   types__response_exception__init
                     (Types__ResponseException         *message);
size_t types__response_exception__get_packed_size
                     (const Types__ResponseException   *message);
size_t types__response_exception__pack
                     (const Types__ResponseException   *message,
                      uint8_t             *out);
size_t types__response_exception__pack_to_buffer
                     (const Types__ResponseException   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseException *
       types__response_exception__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_exception__free_unpacked
                     (Types__ResponseException *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseEcho methods */
void   types__response_echo__init
                     (Types__ResponseEcho         *message);
size_t types__response_echo__get_packed_size
                     (const Types__ResponseEcho   *message);
size_t types__response_echo__pack
                     (const Types__ResponseEcho   *message,
                      uint8_t             *out);
size_t types__response_echo__pack_to_buffer
                     (const Types__ResponseEcho   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseEcho *
       types__response_echo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_echo__free_unpacked
                     (Types__ResponseEcho *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseFlush methods */
void   types__response_flush__init
                     (Types__ResponseFlush         *message);
size_t types__response_flush__get_packed_size
                     (const Types__ResponseFlush   *message);
size_t types__response_flush__pack
                     (const Types__ResponseFlush   *message,
                      uint8_t             *out);
size_t types__response_flush__pack_to_buffer
                     (const Types__ResponseFlush   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseFlush *
       types__response_flush__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_flush__free_unpacked
                     (Types__ResponseFlush *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseInfo methods */
void   types__response_info__init
                     (Types__ResponseInfo         *message);
size_t types__response_info__get_packed_size
                     (const Types__ResponseInfo   *message);
size_t types__response_info__pack
                     (const Types__ResponseInfo   *message,
                      uint8_t             *out);
size_t types__response_info__pack_to_buffer
                     (const Types__ResponseInfo   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseInfo *
       types__response_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_info__free_unpacked
                     (Types__ResponseInfo *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseSetOption methods */
void   types__response_set_option__init
                     (Types__ResponseSetOption         *message);
size_t types__response_set_option__get_packed_size
                     (const Types__ResponseSetOption   *message);
size_t types__response_set_option__pack
                     (const Types__ResponseSetOption   *message,
                      uint8_t             *out);
size_t types__response_set_option__pack_to_buffer
                     (const Types__ResponseSetOption   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseSetOption *
       types__response_set_option__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_set_option__free_unpacked
                     (Types__ResponseSetOption *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseDeliverTx methods */
void   types__response_deliver_tx__init
                     (Types__ResponseDeliverTx         *message);
size_t types__response_deliver_tx__get_packed_size
                     (const Types__ResponseDeliverTx   *message);
size_t types__response_deliver_tx__pack
                     (const Types__ResponseDeliverTx   *message,
                      uint8_t             *out);
size_t types__response_deliver_tx__pack_to_buffer
                     (const Types__ResponseDeliverTx   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseDeliverTx *
       types__response_deliver_tx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_deliver_tx__free_unpacked
                     (Types__ResponseDeliverTx *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseCheckTx methods */
void   types__response_check_tx__init
                     (Types__ResponseCheckTx         *message);
size_t types__response_check_tx__get_packed_size
                     (const Types__ResponseCheckTx   *message);
size_t types__response_check_tx__pack
                     (const Types__ResponseCheckTx   *message,
                      uint8_t             *out);
size_t types__response_check_tx__pack_to_buffer
                     (const Types__ResponseCheckTx   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseCheckTx *
       types__response_check_tx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_check_tx__free_unpacked
                     (Types__ResponseCheckTx *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseQuery methods */
void   types__response_query__init
                     (Types__ResponseQuery         *message);
size_t types__response_query__get_packed_size
                     (const Types__ResponseQuery   *message);
size_t types__response_query__pack
                     (const Types__ResponseQuery   *message,
                      uint8_t             *out);
size_t types__response_query__pack_to_buffer
                     (const Types__ResponseQuery   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseQuery *
       types__response_query__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_query__free_unpacked
                     (Types__ResponseQuery *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseCommit methods */
void   types__response_commit__init
                     (Types__ResponseCommit         *message);
size_t types__response_commit__get_packed_size
                     (const Types__ResponseCommit   *message);
size_t types__response_commit__pack
                     (const Types__ResponseCommit   *message,
                      uint8_t             *out);
size_t types__response_commit__pack_to_buffer
                     (const Types__ResponseCommit   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseCommit *
       types__response_commit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_commit__free_unpacked
                     (Types__ResponseCommit *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseInitChain methods */
void   types__response_init_chain__init
                     (Types__ResponseInitChain         *message);
size_t types__response_init_chain__get_packed_size
                     (const Types__ResponseInitChain   *message);
size_t types__response_init_chain__pack
                     (const Types__ResponseInitChain   *message,
                      uint8_t             *out);
size_t types__response_init_chain__pack_to_buffer
                     (const Types__ResponseInitChain   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseInitChain *
       types__response_init_chain__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_init_chain__free_unpacked
                     (Types__ResponseInitChain *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseBeginBlock methods */
void   types__response_begin_block__init
                     (Types__ResponseBeginBlock         *message);
size_t types__response_begin_block__get_packed_size
                     (const Types__ResponseBeginBlock   *message);
size_t types__response_begin_block__pack
                     (const Types__ResponseBeginBlock   *message,
                      uint8_t             *out);
size_t types__response_begin_block__pack_to_buffer
                     (const Types__ResponseBeginBlock   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseBeginBlock *
       types__response_begin_block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_begin_block__free_unpacked
                     (Types__ResponseBeginBlock *message,
                      ProtobufCAllocator *allocator);
/* Types__ResponseEndBlock methods */
void   types__response_end_block__init
                     (Types__ResponseEndBlock         *message);
size_t types__response_end_block__get_packed_size
                     (const Types__ResponseEndBlock   *message);
size_t types__response_end_block__pack
                     (const Types__ResponseEndBlock   *message,
                      uint8_t             *out);
size_t types__response_end_block__pack_to_buffer
                     (const Types__ResponseEndBlock   *message,
                      ProtobufCBuffer     *buffer);
Types__ResponseEndBlock *
       types__response_end_block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__response_end_block__free_unpacked
                     (Types__ResponseEndBlock *message,
                      ProtobufCAllocator *allocator);
/* Types__Header methods */
void   types__header__init
                     (Types__Header         *message);
size_t types__header__get_packed_size
                     (const Types__Header   *message);
size_t types__header__pack
                     (const Types__Header   *message,
                      uint8_t             *out);
size_t types__header__pack_to_buffer
                     (const Types__Header   *message,
                      ProtobufCBuffer     *buffer);
Types__Header *
       types__header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__header__free_unpacked
                     (Types__Header *message,
                      ProtobufCAllocator *allocator);
/* Types__BlockID methods */
void   types__block_id__init
                     (Types__BlockID         *message);
size_t types__block_id__get_packed_size
                     (const Types__BlockID   *message);
size_t types__block_id__pack
                     (const Types__BlockID   *message,
                      uint8_t             *out);
size_t types__block_id__pack_to_buffer
                     (const Types__BlockID   *message,
                      ProtobufCBuffer     *buffer);
Types__BlockID *
       types__block_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__block_id__free_unpacked
                     (Types__BlockID *message,
                      ProtobufCAllocator *allocator);
/* Types__PartSetHeader methods */
void   types__part_set_header__init
                     (Types__PartSetHeader         *message);
size_t types__part_set_header__get_packed_size
                     (const Types__PartSetHeader   *message);
size_t types__part_set_header__pack
                     (const Types__PartSetHeader   *message,
                      uint8_t             *out);
size_t types__part_set_header__pack_to_buffer
                     (const Types__PartSetHeader   *message,
                      ProtobufCBuffer     *buffer);
Types__PartSetHeader *
       types__part_set_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__part_set_header__free_unpacked
                     (Types__PartSetHeader *message,
                      ProtobufCAllocator *allocator);
/* Types__Validator methods */
void   types__validator__init
                     (Types__Validator         *message);
size_t types__validator__get_packed_size
                     (const Types__Validator   *message);
size_t types__validator__pack
                     (const Types__Validator   *message,
                      uint8_t             *out);
size_t types__validator__pack_to_buffer
                     (const Types__Validator   *message,
                      ProtobufCBuffer     *buffer);
Types__Validator *
       types__validator__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__validator__free_unpacked
                     (Types__Validator *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Types__Request_Closure)
                 (const Types__Request *message,
                  void *closure_data);
typedef void (*Types__RequestEcho_Closure)
                 (const Types__RequestEcho *message,
                  void *closure_data);
typedef void (*Types__RequestFlush_Closure)
                 (const Types__RequestFlush *message,
                  void *closure_data);
typedef void (*Types__RequestInfo_Closure)
                 (const Types__RequestInfo *message,
                  void *closure_data);
typedef void (*Types__RequestSetOption_Closure)
                 (const Types__RequestSetOption *message,
                  void *closure_data);
typedef void (*Types__RequestDeliverTx_Closure)
                 (const Types__RequestDeliverTx *message,
                  void *closure_data);
typedef void (*Types__RequestCheckTx_Closure)
                 (const Types__RequestCheckTx *message,
                  void *closure_data);
typedef void (*Types__RequestQuery_Closure)
                 (const Types__RequestQuery *message,
                  void *closure_data);
typedef void (*Types__RequestCommit_Closure)
                 (const Types__RequestCommit *message,
                  void *closure_data);
typedef void (*Types__RequestInitChain_Closure)
                 (const Types__RequestInitChain *message,
                  void *closure_data);
typedef void (*Types__RequestBeginBlock_Closure)
                 (const Types__RequestBeginBlock *message,
                  void *closure_data);
typedef void (*Types__RequestEndBlock_Closure)
                 (const Types__RequestEndBlock *message,
                  void *closure_data);
typedef void (*Types__Response_Closure)
                 (const Types__Response *message,
                  void *closure_data);
typedef void (*Types__ResponseException_Closure)
                 (const Types__ResponseException *message,
                  void *closure_data);
typedef void (*Types__ResponseEcho_Closure)
                 (const Types__ResponseEcho *message,
                  void *closure_data);
typedef void (*Types__ResponseFlush_Closure)
                 (const Types__ResponseFlush *message,
                  void *closure_data);
typedef void (*Types__ResponseInfo_Closure)
                 (const Types__ResponseInfo *message,
                  void *closure_data);
typedef void (*Types__ResponseSetOption_Closure)
                 (const Types__ResponseSetOption *message,
                  void *closure_data);
typedef void (*Types__ResponseDeliverTx_Closure)
                 (const Types__ResponseDeliverTx *message,
                  void *closure_data);
typedef void (*Types__ResponseCheckTx_Closure)
                 (const Types__ResponseCheckTx *message,
                  void *closure_data);
typedef void (*Types__ResponseQuery_Closure)
                 (const Types__ResponseQuery *message,
                  void *closure_data);
typedef void (*Types__ResponseCommit_Closure)
                 (const Types__ResponseCommit *message,
                  void *closure_data);
typedef void (*Types__ResponseInitChain_Closure)
                 (const Types__ResponseInitChain *message,
                  void *closure_data);
typedef void (*Types__ResponseBeginBlock_Closure)
                 (const Types__ResponseBeginBlock *message,
                  void *closure_data);
typedef void (*Types__ResponseEndBlock_Closure)
                 (const Types__ResponseEndBlock *message,
                  void *closure_data);
typedef void (*Types__Header_Closure)
                 (const Types__Header *message,
                  void *closure_data);
typedef void (*Types__BlockID_Closure)
                 (const Types__BlockID *message,
                  void *closure_data);
typedef void (*Types__PartSetHeader_Closure)
                 (const Types__PartSetHeader *message,
                  void *closure_data);
typedef void (*Types__Validator_Closure)
                 (const Types__Validator *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Types__ABCIApplication_Service Types__ABCIApplication_Service;
struct _Types__ABCIApplication_Service
{
  ProtobufCService base;
  void (*echo)(Types__ABCIApplication_Service *service,
               const Types__RequestEcho *input,
               Types__ResponseEcho_Closure closure,
               void *closure_data);
  void (*flush)(Types__ABCIApplication_Service *service,
                const Types__RequestFlush *input,
                Types__ResponseFlush_Closure closure,
                void *closure_data);
  void (*info)(Types__ABCIApplication_Service *service,
               const Types__RequestInfo *input,
               Types__ResponseInfo_Closure closure,
               void *closure_data);
  void (*set_option)(Types__ABCIApplication_Service *service,
                     const Types__RequestSetOption *input,
                     Types__ResponseSetOption_Closure closure,
                     void *closure_data);
  void (*deliver_tx)(Types__ABCIApplication_Service *service,
                     const Types__RequestDeliverTx *input,
                     Types__ResponseDeliverTx_Closure closure,
                     void *closure_data);
  void (*check_tx)(Types__ABCIApplication_Service *service,
                   const Types__RequestCheckTx *input,
                   Types__ResponseCheckTx_Closure closure,
                   void *closure_data);
  void (*query)(Types__ABCIApplication_Service *service,
                const Types__RequestQuery *input,
                Types__ResponseQuery_Closure closure,
                void *closure_data);
  void (*commit)(Types__ABCIApplication_Service *service,
                 const Types__RequestCommit *input,
                 Types__ResponseCommit_Closure closure,
                 void *closure_data);
  void (*init_chain)(Types__ABCIApplication_Service *service,
                     const Types__RequestInitChain *input,
                     Types__ResponseInitChain_Closure closure,
                     void *closure_data);
  void (*begin_block)(Types__ABCIApplication_Service *service,
                      const Types__RequestBeginBlock *input,
                      Types__ResponseBeginBlock_Closure closure,
                      void *closure_data);
  void (*end_block)(Types__ABCIApplication_Service *service,
                    const Types__RequestEndBlock *input,
                    Types__ResponseEndBlock_Closure closure,
                    void *closure_data);
};
typedef void (*Types__ABCIApplication_ServiceDestroy)(Types__ABCIApplication_Service *);
void types__abciapplication__init (Types__ABCIApplication_Service *service,
                                   Types__ABCIApplication_ServiceDestroy destroy);
#define TYPES__ABCIAPPLICATION__BASE_INIT \
    { &types__abciapplication__descriptor, protobuf_c_service_invoke_internal, NULL }
#define TYPES__ABCIAPPLICATION__INIT(function_prefix__) \
    { TYPES__ABCIAPPLICATION__BASE_INIT,\
      function_prefix__ ## echo,\
      function_prefix__ ## flush,\
      function_prefix__ ## info,\
      function_prefix__ ## set_option,\
      function_prefix__ ## deliver_tx,\
      function_prefix__ ## check_tx,\
      function_prefix__ ## query,\
      function_prefix__ ## commit,\
      function_prefix__ ## init_chain,\
      function_prefix__ ## begin_block,\
      function_prefix__ ## end_block  }
void types__abciapplication__echo(ProtobufCService *service,
                                  const Types__RequestEcho *input,
                                  Types__ResponseEcho_Closure closure,
                                  void *closure_data);
void types__abciapplication__flush(ProtobufCService *service,
                                   const Types__RequestFlush *input,
                                   Types__ResponseFlush_Closure closure,
                                   void *closure_data);
void types__abciapplication__info(ProtobufCService *service,
                                  const Types__RequestInfo *input,
                                  Types__ResponseInfo_Closure closure,
                                  void *closure_data);
void types__abciapplication__set_option(ProtobufCService *service,
                                        const Types__RequestSetOption *input,
                                        Types__ResponseSetOption_Closure closure,
                                        void *closure_data);
void types__abciapplication__deliver_tx(ProtobufCService *service,
                                        const Types__RequestDeliverTx *input,
                                        Types__ResponseDeliverTx_Closure closure,
                                        void *closure_data);
void types__abciapplication__check_tx(ProtobufCService *service,
                                      const Types__RequestCheckTx *input,
                                      Types__ResponseCheckTx_Closure closure,
                                      void *closure_data);
void types__abciapplication__query(ProtobufCService *service,
                                   const Types__RequestQuery *input,
                                   Types__ResponseQuery_Closure closure,
                                   void *closure_data);
void types__abciapplication__commit(ProtobufCService *service,
                                    const Types__RequestCommit *input,
                                    Types__ResponseCommit_Closure closure,
                                    void *closure_data);
void types__abciapplication__init_chain(ProtobufCService *service,
                                        const Types__RequestInitChain *input,
                                        Types__ResponseInitChain_Closure closure,
                                        void *closure_data);
void types__abciapplication__begin_block(ProtobufCService *service,
                                         const Types__RequestBeginBlock *input,
                                         Types__ResponseBeginBlock_Closure closure,
                                         void *closure_data);
void types__abciapplication__end_block(ProtobufCService *service,
                                       const Types__RequestEndBlock *input,
                                       Types__ResponseEndBlock_Closure closure,
                                       void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    types__code_type__descriptor;
extern const ProtobufCMessageDescriptor types__request__descriptor;
extern const ProtobufCMessageDescriptor types__request_echo__descriptor;
extern const ProtobufCMessageDescriptor types__request_flush__descriptor;
extern const ProtobufCMessageDescriptor types__request_info__descriptor;
extern const ProtobufCMessageDescriptor types__request_set_option__descriptor;
extern const ProtobufCMessageDescriptor types__request_deliver_tx__descriptor;
extern const ProtobufCMessageDescriptor types__request_check_tx__descriptor;
extern const ProtobufCMessageDescriptor types__request_query__descriptor;
extern const ProtobufCMessageDescriptor types__request_commit__descriptor;
extern const ProtobufCMessageDescriptor types__request_init_chain__descriptor;
extern const ProtobufCMessageDescriptor types__request_begin_block__descriptor;
extern const ProtobufCMessageDescriptor types__request_end_block__descriptor;
extern const ProtobufCMessageDescriptor types__response__descriptor;
extern const ProtobufCMessageDescriptor types__response_exception__descriptor;
extern const ProtobufCMessageDescriptor types__response_echo__descriptor;
extern const ProtobufCMessageDescriptor types__response_flush__descriptor;
extern const ProtobufCMessageDescriptor types__response_info__descriptor;
extern const ProtobufCMessageDescriptor types__response_set_option__descriptor;
extern const ProtobufCMessageDescriptor types__response_deliver_tx__descriptor;
extern const ProtobufCMessageDescriptor types__response_check_tx__descriptor;
extern const ProtobufCMessageDescriptor types__response_query__descriptor;
extern const ProtobufCMessageDescriptor types__response_commit__descriptor;
extern const ProtobufCMessageDescriptor types__response_init_chain__descriptor;
extern const ProtobufCMessageDescriptor types__response_begin_block__descriptor;
extern const ProtobufCMessageDescriptor types__response_end_block__descriptor;
extern const ProtobufCMessageDescriptor types__header__descriptor;
extern const ProtobufCMessageDescriptor types__block_id__descriptor;
extern const ProtobufCMessageDescriptor types__part_set_header__descriptor;
extern const ProtobufCMessageDescriptor types__validator__descriptor;
extern const ProtobufCServiceDescriptor types__abciapplication__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_types_2eproto__INCLUDED */
